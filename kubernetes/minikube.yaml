# Namespace

apiVersion: v1
kind: Namespace
metadata:
  name: npd-dev
---
# ConfigMap
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: npd-cm
  namespace: npd-dev
data:
  ALLOWED_ORIGINS: "10.0.0.0/8"
  ALLOWED_HOSTS: "*"
  DB_HOST: "db"
  DB_NAME: "nlpr"
  DB_PORT: "5432"
  DEBUG: "False"
  TZ: America/Denver
---
# React

# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: npd-app
  namespace: npd-dev
  labels:
    app: npd-app
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: npd-app
  template:
    metadata:
      labels:
        app: npd-app
    spec:
      containers:
        - name: npd-app
          image: docker.io/library/npd-app-dev:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 80
          resources:
            limits:
              cpu: "250m"
              memory: "1024M"
      restartPolicy: Always
---
# Service

apiVersion: v1
kind: Service
metadata:
  name: npd-app-ingress
  namespace: npd-dev
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: npd-app
---
# Ingress
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: npd-app-ingress
  namespace: npd-dev
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_clear_headers "strict-transport-security";
      more_clear_headers "x-content-type-options";
      more_clear_headers "x-frame-options";
      more_clear_headers "content-security-policy";
      proxy_set_header X-Forwarded-Proto https;
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
spec:
  rules:
    - host: localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: npd-app-service
                port:
                  number: 80
---
# Django

# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: npd-django
  namespace: npd-dev
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: npd-django
  template:
    metadata:
      labels:
        app: npd-django
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: npd-cm
          env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: npd-secrets-dev
                  key: POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: npd-secrets-dev
                  key: POSTGRES_PASSWORD
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: npd-secrets-dev
                  key: DJANGO_SECRET_KEY
          image: docker.io/library/npd-server-dev:latest
          imagePullPolicy: Never
          name: npd-django
          args:
            - /bin/sh
            - -c
            - python manage.py collectstatic && /bin/bash ./entrypoint.sh
          ports:
            - containerPort: 80
          resources:
            limits:
              cpu: "250m"
              memory: "1024M"
      restartPolicy: Always
---
# Service

apiVersion: v1
kind: Service
metadata:
  namespace: npd-dev
  name: npd-django-ingress
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 80
  selector:
    app: npd-django
---
# Ingress
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_clear_headers "strict-transport-security";
      more_clear_headers "x-content-type-options";
      more_clear_headers "x-frame-options";
      more_clear_headers "content-security-policy";
      proxy_set_header X-Forwarded-Proto https;
  name: npd-django-ingress
  namespace: npd-dev
spec:
  rules:
    - host: localhost
      http:
        paths:
          - path: /npd(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: npd-django-service
                port:
                  number: 80
---
# Database

#Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: npd-dev
  labels:
    app: npd-db
  name: npd-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: npd-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: npd-db
    spec:
      containers:
        - env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: npd-secrets-dev
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: npd-secrets-dev
                  key: POSTGRES_USER
          image: docker.io/library/npd-db-dev:latest
          imagePullPolicy: Never
          name: npd-db
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              subPath: postgres
              name: hydro-npd-pv
          resources:
            limits:
              cpu: "250m"
              memory: "1024M"
      restartPolicy: Always
      volumes:
        - name: hydro-npd-pv
          persistentVolumeClaim:
            claimName: hydro-npd-pv
---
# Service

apiVersion: v1
kind: Service
metadata:
  namespace: npd-dev
  labels:
    app: npd-db
  name: npd-db-service
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    app: npd-db

---
# Persistent Volume Claim

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: npd-dev
  labels:
    app: npd-db
  name: hydro-npd-pv
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---

